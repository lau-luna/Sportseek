name: Deploy to InfinityFree

on:
  push:
    branches:
      - main

jobs:
  ftp-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install LFTP
      run: sudo apt-get install -y lftp

    - name: Set up PHP and install dependencies
      run: |
        sudo apt-get install -y php php-cli php-mbstring php-xml php-mysql
        composer install # Si usas Composer para manejar dependencias

    - name: Test database connection
      run: |
        php -r "
        try {
            \$host = getenv('DB_HOST');
            \$port = getenv('DB_PORT');
            \$bd = getenv('DB_NAME');
            \$usuario = getenv('DB_USER');
            \$contrasenia = getenv('DB_PASSWORD');

            // Conexi贸n PDO con la base de datos
            \$conexion = new PDO('mysql:host=' . \$host . ';port=' . \$port . ';dbname=' . \$bd, \$usuario, \$contrasenia);
            echo 'Conexi贸n a la base de datos exitosa';
        } catch (Exception \$ex) {
            echo 'Error en la conexi贸n: ' . \$ex->getMessage();
            exit(1); // Termina el script con un c贸digo de error
        }
        "
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    - name: Deploy only changed files via FTP
      run: |
        lftp -c "set ssl:verify-certificate no; open -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_SERVER }}; mirror -R --only-newer . /htdocs"
      env:
        FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        FTP_SERVER: ${{ secrets.FTP_SERVER }}

    - name: Check deployment status
      run: echo "Deployment completed successfully!"
